<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	
	<context:component-scan base-package="org.yona"/>
	
	<http auto-config="true">
	    <intercept-url pattern="/archives" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"/>
	    <intercept-url pattern="/archives/modify" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"/>
	    <intercept-url pattern="/archives/register" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"/>
	    <intercept-url pattern="/**" access="permitAll"/>
	    <form-login username-parameter="userid"
        			password-parameter="userpw"
        			login-processing-url="/login"
        			login-page="/member/signin"
        			default-target-url="/"
        			authentication-failure-handler-ref="loginFailHandler"
        			authentication-success-handler-ref="loginSuccessHandler"
		/>
        			
		<access-denied-handler error-page="/member/denyaccess"/>
		
		<logout invalidate-session="true"
        		logout-success-url="/"/>
        	
        	
        <!--	invalid-session-url  세션이 끝났을 때 이동할 페이지
        		max-sessions  	최대 허용 가능 세션 수 
        		expired-url		중복 로그인이 일어났을때 이동할 페이지
        -->	
        <session-management invalid-session-url="/member/signin">
        	<concurrency-control max-sessions="1" expired-url="/member/signin"/>
        </session-management>
        		
	</http>
	
	<jdbc-user-service data-source-ref="dataSource" id="UserService"
		users-by-username-query="SELECT ID as userid, PASSWORD as userpw, ENABLED FROM users WHERE ID=?"
		authorities-by-username-query="SELECT ID as userid, AUTHORITY FROM users WHERE ID=?"/>
	
	<authentication-manager>
		<authentication-provider ref="Authentication"/>
		<authentication-provider user-service-ref="UserService">
			<password-encoder ref="bcryptPasswordEncoder"/>
		</authentication-provider>
	</authentication-manager>
	
	<beans:bean id="UserService" class="org.yona.login.LoginServiceImp"></beans:bean>
	<beans:bean id="Authentication" class="org.yona.util.Authentication"></beans:bean>

	<beans:bean id="loginFailHandler" class="org.yona.util.AuthenticationFail">
		<beans:property name="userid" value="userid"/>
		<beans:property name="userpw" value="userpw"/>
		<beans:property name="errmsg" value="errormsg"/>
		<beans:property name="defaultUrl" value="/member/signin?error"/>
	</beans:bean>
	
	<beans:bean id="loginSuccessHandler" class="org.yona.util.AuthenticationSuccess">
		<beans:property name="userid" value="userid"></beans:property>
		<beans:property name="defaultUrl" value="/"></beans:property>
	</beans:bean>
	
	<beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		
	</beans:bean>
</beans:beans>